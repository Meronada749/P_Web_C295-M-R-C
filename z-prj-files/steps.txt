npm init adonisjs@latest <project name> -- --db=mysql -K=api --auth-guard=access_tokens

npm install

.env edit

TZ=UTC
PORT=3333
HOST=localhost
LOG_LEVEL=info
APP_KEY=
NODE_ENV=development
DB_HOST=127.0.0.1
DB_PORT=6033
DB_USER=root
DB_PASSWORD=root
DB_DATABASE=db_library

node ace generate:key
node ace migration:fresh --seed
node ace list:routes

node ace make:model Book -m
node ace make:seeder Book
node ace make:factory Book
node ace make:validator Book
node ace make:controller Book -r  [index, store(validator), show, update(validator), destroy]
router.resource('students', StudentsController).apiOnly()

docker container run -d --name mysql-container --restart always -e MYSQL_ROOT_PASSWORD=root -p 6033:3306 -v mysql-volume:/var/lib/mysql mysql
docker container exec -it mysql-container mysql -u root -proot
create database db_library;
use db_library;
select * from users;

UPDATE users SET role = 'admin' WHERE id = 2;

UPDATE users SET is_admin = 1 WHERE id = 6;

//----------------------------------------------------------authentification-----------------------------------------------//

Model and migration of User

Model and migration of Book, Comment, Evaluation 
.unique() // Un book est lié à un seul utilisateur
.nullable() // Permettre aux books de ne pas être liés à un utilisateur (par exemple, pour les anciens books)

validator of book

userId: vine.number().exists(async (db, value) => {
const user = await db.from('users').where('id', value).first()
// user est soit un objet (si trouvé), soit undefined (si non trouvé).
// Explication du !!user :
// Si user est un objet → !!user devient true
// Si user est undefined → !!user devient false
return !!user
}),

controller of book

node ace make:validator auth
node ace make:controller AuthController

routes .use(middleware.auth())

controller of Comment

//----------------------------------------------------------Roles-----------------------------------------------//

npm install @adonisjs/bouncer
node ace configure @adonisjs/bouncer
node ace make:policy Comment
node ace make:policy Evaluation
node ace make:policy Book
